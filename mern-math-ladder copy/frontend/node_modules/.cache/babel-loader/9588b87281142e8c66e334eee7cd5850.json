{"ast":null,"code":"import _defineProperty from \"/Users/akhiladiddi/Documents/SER515/MathLadder/mern-math-ladder/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/akhiladiddi/Documents/SER515/MathLadder/mern-math-ladder/frontend/src/components/AppDragDropDemo.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { atan2, chain, derivative, e, evaluate, log, pi, pow, round, sqrt } from 'mathjs';\nimport './AppDragDemo.css';\nlet prop1 = \"\";\nlet flag = false;\nlet sum = null;\nexport default class AppDragDropDemo extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [{\n        name: \"1\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"2\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"3\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"4\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"5\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"6\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"7\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"8\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"9\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"0\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"+\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"-\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"*\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"/\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"%\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \"(\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }, {\n        name: \")\",\n        category: \"wip\",\n        bgcolor: \"skyblue\"\n      }],\n      finalRes: null,\n      message: null\n    };\n\n    this.onDragStart = (ev, id) => {\n      console.log('dragstart:', id);\n      ev.dataTransfer.setData(\"id\", id);\n    };\n\n    this.onDragOver = ev => {\n      ev.preventDefault();\n    };\n\n    this.onDrop = (ev, cat) => {\n      let id = ev.dataTransfer.getData(\"id\");\n      let tasks = this.state.tasks.filter(task => {\n        if (task.name == id) {\n          task.category = cat;\n        }\n\n        return task;\n      });\n      prop1 += \" \" + id;\n      this.setState(_objectSpread({}, this.state, {\n        tasks\n      }));\n    };\n  }\n\n  displayresult() {\n    flag = true;\n\n    try {\n      this.setState({\n        finalRes: evaluate(prop1)\n      });\n    } catch (Exception) {\n      flag = false;\n      this.setState({\n        message: \"Invalid Expression from state\"\n      });\n      sum = React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"invalid expression\");\n    }\n  }\n\n  render() {\n    var tasks = {\n      wip: [],\n      complete: []\n    };\n    this.state.tasks.forEach(t => {\n      tasks[t.category].push(React.createElement(\"div\", {\n        key: t.name,\n        onDragStart: e => this.onDragStart(e, t.name),\n        draggable: true,\n        className: \"draggable\",\n        style: {\n          backgroundColor: t.bgcolor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, t.name));\n    });\n\n    if (this.state.finalRes) {\n      sum = React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.state.finalRes);\n      var errorMessage = null;\n\n      if (this.setState.message) {\n        errorMessage = React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, this.state.message);\n      }\n\n      if (flag == false) {\n        sum = React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"invalid expression\");\n      }\n    } else {\n      if (flag == true) sum = React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"invalid expression\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container-drag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Math Ladder\"), React.createElement(\"div\", {\n      className: \"wip\",\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => {\n        this.onDrop(e, \"wip\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"task-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Operators\"), tasks.wip), React.createElement(\"div\", {\n      className: \"droppable\",\n      onDragOver: e => this.onDragOver(e),\n      onDrop: e => this.onDrop(e, \"complete\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"task-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Calculations\"), React.createElement(\"span\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.displayresult(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Result\")), React.createElement(\"span\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.clearResult(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Clear\")), tasks.complete, React.createElement(\"text\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, sum), errorMessage), React.createElement(\"div\", {\n      className: \"task-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/akhiladiddi/Documents/SER515/MathLadder/mern-math-ladder/frontend/src/components/AppDragDropDemo.jsx"],"names":["React","Component","atan2","chain","derivative","e","evaluate","log","pi","pow","round","sqrt","prop1","flag","sum","AppDragDropDemo","state","tasks","name","category","bgcolor","finalRes","message","onDragStart","ev","id","console","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","filter","task","setState","displayresult","Exception","render","wip","complete","forEach","t","push","backgroundColor","errorMessage","clearResult"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    atan2, chain, derivative, e, evaluate, log, pi, pow, round, sqrt\n  } from 'mathjs';\nimport './AppDragDemo.css';\nlet prop1 = \"\";\nlet flag = false;\nlet sum = null;\nexport default class AppDragDropDemo extends Component {\n    state = {\n        tasks: [\n            {name:\"1\" ,category:\"wip\", bgcolor: \"skyblue\"},\n            {name:\"2\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"3\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"4\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"5\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"6\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"7\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"8\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"9\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"0\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"+\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"-\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"*\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"/\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"%\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\"(\", category:\"wip\", bgcolor:\"skyblue\"},\n            {name:\")\", category:\"wip\", bgcolor:\"skyblue\"}\n          ],\n          finalRes : null,\n          message: null\n    }\n\n    // clearListner(event) => {\n    //     Clear state variables, wip, message\n    // }\n\n    onDragStart = (ev, id) => {\n        console.log('dragstart:',id);\n        \n        ev.dataTransfer.setData(\"id\", id);\n    }\n\n    onDragOver = (ev) => {\n        ev.preventDefault();\n    }\n\n    displayresult()\n       {\n           flag = true;\n           try{\n           this.setState({ finalRes:  evaluate(prop1)});\n           }\n           catch(Exception)\n           {\n            flag = false\n            this.setState({ message: \"Invalid Expression from state\" })\n            sum= <h1>{\"invalid expression\"}</h1>\n           }\n        \n       }\n\n       \n\n    onDrop = (ev, cat) => {\n       let id = ev.dataTransfer.getData(\"id\");\n       \n       let tasks = this.state.tasks.filter((task) => {\n           if (task.name == id) {\n               task.category = cat;\n           }\n\n           return task;\n       });\n\n    \n       prop1+=\" \"+id\n    \n       this.setState({\n           ...this.state,\n           tasks\n       });\n\n    \n\n    }\n\n    render() {\n        var tasks = {\n            wip: [],\n            complete: []\n        }\n\n\n        this.state.tasks.forEach ((t) => {\n            tasks[t.category].push(\n                <div key={t.name} \n                    onDragStart = {(e) => this.onDragStart(e, t.name)}\n                    draggable\n                    className=\"draggable\"\n                    style = {{backgroundColor: t.bgcolor}}\n                >\n                    {t.name}\n                </div>\n            );\n        });\n        \n        if(this.state.finalRes){\n\n            sum = <h1>{this.state.finalRes}</h1>\n            var errorMessage = null;\n            if(this.setState.message){\n             errorMessage = <h1>{this.state.message}</h1>\n            }\n\n            if(flag == false)\n            {\n            sum= <h1>{\"invalid expression\"}</h1>\n            }\n        }\n        else\n        {\n            if(flag == true)\n            sum= <h1>{\"invalid expression\"}</h1>\n        }\n\n        return (  \n\n            <div className=\"container-drag\">\n                <h2 className=\"header\">Math Ladder</h2>\n                <div className=\"wip\"\n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>{this.onDrop(e, \"wip\")}}>\n                    <span className=\"task-header\">Operators</span>\n                    {tasks.wip}\n                </div>\n                <div className=\"droppable\" \n                    onDragOver={(e)=>this.onDragOver(e)}\n                    onDrop={(e)=>this.onDrop(e, \"complete\")}\n                >\n                     <span className=\"task-header\">Calculations</span>\n                     <span className=\"button\"><button onClick ={()=> this.displayresult() }>Result</button></span>\n                     <span className=\"button\"><button onClick ={()=> this.clearResult() }>Clear</button></span>\n                     {tasks.complete}\n                     \n                     <text>{sum}</text>\n                    {errorMessage}\n                </div>\n\n                <div className=\"task-header\">\n                    \n                </div>\n\n\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}