{"ast":null,"code":"var _jsxFileName = \"/Users/akhiladiddi/Documents/SER515/MathLadder/mern-math-ladder/frontend/src/components/question.jsx\";\nimport React, { Component } from 'react';\nimport { getAssignment } from './userFunctions';\nvar choicesToShow = [];\nvar answerBy = [];\n\nclass question extends Component {\n  constructor() {\n    super();\n    this.state = {\n      assignment: [],\n      assignmentList: [],\n      options: [],\n      optionsToDisplay: []\n    };\n    var url = window.location.href.split('/');\n    var lastSegment = url.pop();\n    getAssignment(lastSegment).then(res => {\n      this.setState({\n        assignment: res,\n        options: res ? res.options : []\n      });\n    });\n    this.listOptions.bind(this);\n  }\n\n  listOptions() {\n    var choices = this.state.options;\n    choicesToShow = [];\n    answerBy = [];\n\n    for (var key in choices) {\n      choicesToShow.push(choices[key].option);\n      answerBy.push(choices[key].answeredBy);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Question :  \", this.state.assignment.question, \" ?\", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.listOptions()), choicesToShow.map(movie => React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, movie)));\n  }\n\n}\n\nexport default question;","map":{"version":3,"sources":["/Users/akhiladiddi/Documents/SER515/MathLadder/mern-math-ladder/frontend/src/components/question.jsx"],"names":["React","Component","getAssignment","choicesToShow","answerBy","question","constructor","state","assignment","assignmentList","options","optionsToDisplay","url","window","location","href","split","lastSegment","pop","then","res","setState","listOptions","bind","choices","key","push","option","answeredBy","render","map","movie"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,IAAIC,aAAa,GAAG,EAApB;AACA,IAAIC,QAAQ,GAAG,EAAf;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAE7BK,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,cAAc,EAAE,EAFL;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,gBAAgB,EAAE;AAJP,KAAb;AAMA,QAAIC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,CAAV;AACA,QAAIC,WAAW,GAAGL,GAAG,CAACM,GAAJ,EAAlB;AACAhB,IAAAA,aAAa,CAACe,WAAD,CAAb,CACCE,IADD,CACMC,GAAG,IAAI;AACT,WAAKC,QAAL,CAAc;AACVb,QAAAA,UAAU,EAACY,GADD;AAEVV,QAAAA,OAAO,EAAEU,GAAG,GAAEA,GAAG,CAACV,OAAN,GAAgB;AAFlB,OAAd;AAIH,KAND;AAOA,SAAKY,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB;AACD;;AAEDD,EAAAA,WAAW,GACX;AACM,QAAIE,OAAO,GAAG,KAAKjB,KAAL,CAAWG,OAAzB;AACAP,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,QAAQ,GAAG,EAAX;;AACA,SAAI,IAAIqB,GAAR,IAAeD,OAAf,EAAwB;AACpBrB,MAAAA,aAAa,CAACuB,IAAd,CAAmBF,OAAO,CAACC,GAAD,CAAP,CAAaE,MAAhC;AACAvB,MAAAA,QAAQ,CAACsB,IAAT,CAAcF,OAAO,CAACC,GAAD,CAAP,CAAaG,UAA3B;AACH;AACN;;AAEHC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACgB,KAAKtB,KAAL,CAAWC,UAAX,CAAsBH,QADtC,QAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKiB,WAAL,EADD,CAFJ,EAKInB,aAAa,CAAC2B,GAAd,CAAkBC,KAAK,IACzB;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KADH,CADE,CALJ,CADJ;AAcH;;AAhD4B;;AAmDjC,eAAe1B,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport {getAssignment} from './userFunctions';\nvar choicesToShow = [];\nvar answerBy = [];\n\nclass question extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n          assignment: [],\n          assignmentList: [],\n          options: [],\n          optionsToDisplay: []\n        }\n        var url = window.location.href.split('/');\n        var lastSegment = url.pop();\n        getAssignment(lastSegment)\n        .then(res => {\n            this.setState({\n                assignment:res,\n                options: res? res.options : []    \n            })\n        })\n        this.listOptions.bind(this);\n      }\n\n      listOptions() \n      {\n            var choices = this.state.options;\n            choicesToShow = [];\n            answerBy = [];\n            for(var key in choices) {\n                choicesToShow.push(choices[key].option);\n                answerBy.push(choices[key].answeredBy);\n            }\n      }\n\n    render(){\n        return (\n            <div className=\"container\">\n               Question :  {this.state.assignment.question} ?\n                <ul>\n                {this.listOptions()}  \n                </ul>\n               {choicesToShow.map(movie => (\n              <div className=\"card\">\n                {movie}\n              </div>\n          ))}\n            </div>\n            \n        ) \n    }\n}\n\nexport default question"]},"metadata":{},"sourceType":"module"}